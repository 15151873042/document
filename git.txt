本地创建仓库并与远程库相关联
	1、创建本地仓库
		git init
	2、添加一个远程库信息
		git remote add origin git@github.com:15151873042/document.git
	3、拉去远程库master分支内容到本地，此时会自动创建一个本地master分支
		git pull origin master
	4、将本地master分支和远程master分支建立映射关系
		git branch --set-upstream-to origin/master
		
本地直接克隆远程库
	使用git clone，此时会自动创建一个本地master分支，并且本地master分支和远程master分支已建立映射关系
	git clone git@github.com:15151873042/document.git
	
创建分支
	拉去所有远程库分支到本地
		git fetch
	查看本地所有远程库分支信息
		git branch -r
	通过远程master分支建立dev分支
		git switch -c dev origin/master
	将本地dev分支推送到远程库，并创建远程dev分支,并且建立映射关系
		git push -u origin dev
		
dev分支合并到master分支
	拉去远程dev最新内容到本地
		git fetch origin dev
	切换到本地master分支
		git switch master
	合并远程dev分支内容到本地master分支
		git merge origin/dev
	将本地master分支推送到远程master分支
		git push origin master
	



常用命令：

git clone <远程库地址>
	将远程库master分支克隆到本地，并且本地master与远程master已相关联
git branch -vv
	查看本地库分支与远程库分支的映射关系
git init
	创建本地库
git remote add <远程库名> <远程库地址>
	添加一个新的远程库
git remote -v
	查看所有远程库的信息
git remote rm <远程库名>
	删除远程库
git branch --set-upstream-to <远程库名>/<远程分支>
	将本地当前分支与远程库分支建立映射关系
git branch --unset-upstream
	撤销本地当前分支与远程分支的映射关系


git fetch <远程库名>
	获取远程库的所有分支最新内容到本地（相当于本地拥有远程库的所有分支内容）
git branch
	查看所有本地库分支
git branch -a
	查看所有本地库与远程库分支
git branch -r
	查看所有远程库分支
git switch -c <本地分支名>
	以当前本地分支为基础创建别切换到另一本地分支
git switch -c <本地分支名> <基础分支名>
	git switch -c dev origin/test ------以远程库test分支为基础创建一个本地库dev分支，且本地dev分支以和远程库test建立映射关系
git switch <本地分支名>
	切换本地分支
git merge <需要被合并的分支名>
	git merge dev -----将dev分支合并到当前分支并提交
	git merge origin/dev ------将远程库dev合并到当前分支
	

git pull <远程库名> <远程分支名>
	拉去远程分支更新到本地，并合并到当前本地分支	
git pull <远程库名>
	拉去远程分支更新到本地，如果本地分支与远程分支有映射关系，则会自动合并到对应的本地分支
git pull
	如果只有一个远程库信息，可用该命令，作用同上

git push <远程库名> <远程分支名>
	推送当前本地分支的内容到远程分支，如果远程分支不存在，则创建远程分支
git push <远程库名>
	如果本地当前分支与远程分支有映射关系，推送当前本地分支内容到远程分支
git push
	如果只有一个远程库信息，可用该命令，作用同上

git push --delete <远程库名> <远程分支名>
	删除远程分支

git add <文件名>
	将修改从工作区添加到暂存区

git commit -m <提交说明>
	将暂存区的所有内容提交到本地仓库
	
git status
	1.查看当前工作区有哪些修改未提交到暂存区
	2.查看暂存区有哪些修改未提交到版本库

git diff
	查看本地和暂存区的不同

git log
git reflog
	这两个命令都是查询由近到远的提交日志记录，区别在于：
	git reflog可查询所有的commit(提交)，reset(回退)记录；
	git log只能查看commit(提交)记录，并且被回退之前的提交记录查看不了的
	
git reset --hard <提交记录的版本号>
	本地仓库回退到某个版本
	
git reset HEAD <文件名>
	撤销添加到暂存区的修改

git checkout
	撤销工作区的修改
	1.如果工作区的修改未添加到暂存区，可以使用git checkout -- <文件名>进行撤销
	2.如果工作区的修改已添加到暂存区，可试用git checkout <HEAD版本号> <文件名>进行撤销，并且暂存区中的修改也会被撤销（相当于还原该文件）
	
ssh-keygen -t rsa -C "gitHub账户对应邮箱信息"
	在C:\Users\15151\.ssh\目录下生成公钥id_rsa.pub和私钥id_rsa，将id_rsa.pub内容添加到gitHub SSH keys，这样本地版本库就可以向gitHub远程仓库推送内容了